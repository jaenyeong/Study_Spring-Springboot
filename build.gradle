buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
}

plugins {
    // [자동 설정] 메이븐 로컬 저장소로 스프링부트 커스터마이징 설정파일 아티팩트 추출시 스프링 의존성 주석처리
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    // [자동 설정] 메이븐 로컬 저장소로 스프링부트 커스터마이징 설정파일 아티팩트 추출시 스프링 의존성 주석처리
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'idea'
    id 'maven-publish'
}

group = 'com.jaenyeong'
version = '1.0.0'
sourceCompatibility = '11'

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    maven {
        url '/Users/kimjaenyeong/.m2/repository'
    }
    mavenLocal()
    jcenter()
}

configurations {
    optional
    compile.extendsFrom optional
//    all {
//        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//    }
}

publishing {
    publications {
        // 해당 정보를 입력하여 타 프로젝트에서 해당 라이브러리를 참조
        maven(MavenPublication) {
            groupId = 'com.jaenyeong.springboot_started.auto_configure' // groupId 추가
            artifactId = 'noah-artifact'  // artifactId 추가
            version = '1.0.0' // 버전 정보 추가
            from components.java
        }
    }
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.11'
    testImplementation group: 'junit', name: 'junit', version: '4.12'

    // [자동 설정] - 메이븐 로컬 저장소로 스프링부트 커스터마이징 설정파일 아티팩트 추출시 스프링 의존성 주석처리
    implementation('org.springframework.boot:spring-boot-starter-web') {
        // 톰캣 제거
        exclude module: 'spring-boot-starter-tomcat'
//        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'

        // loggig 제거
        exclude module: 'spring-boot-starter-logging'
    }
    // 톰캣을 제거 하고 제티(jetty)
//    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jetty', version: '2.3.1.RELEASE'

    // 네티를 이용해 만든 언더토어(Undertow)
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: '2.3.1.RELEASE'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        // 테스트를 위해 loggig 제거
        exclude module: 'spring-boot-starter-logging'
    }

    // Spring Data JPA
//    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

    // [버전 명시]
    // 스프링에서 버전을 관리하지 않기 때문에 버전을 직접 명시해줘야 함
//    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
    // 스프링부트가 버전을 관리해주지만 직접 명시하는 경우
//    implementation group: 'org.springframework', name: 'spring-core', version: '5.2.6.RELEASE'

    // [자동 설정] - 메이븐 로컬 저장소로 스프링부트 커스터마이징 설정파일 아티팩트 추출시 의존성 추가 (기타 다른 의존성 제거)
//    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '2.3.1.RELEASE'
//    optional group: 'org.springframework.boot', name: 'spring-boot-autoconfigure-processor', version: '2.3.1.RELEASE'
//    compileOnly group: 'org.springframework.boot', name: 'spring-boot-dependencies', version: '2.3.1.RELEASE', ext: 'pom'

    // Holoman properties 설정 파일에 어노테이션 사용을 위하여 의존성 추가
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // 로컬 저장소에 저장되어 있는 새로 생성한 자동 설정 파일 추가
    // spring devtools 의존성 추가시 HolomanProperties 파일을 찾지 못하여 주석 처리
    implementation group: 'com.jaenyeong.springboot_started.auto_configure', name: 'noah-artifact', version: '1.0.0'

    // 프로퍼티 validator 용도
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator'

    // log4j2으로 변경
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.3.1.RELEASE'

    // 테스트에서 WebTestClient 사용
    implementation('org.springframework.boot:spring-boot-starter-webflux') {
        exclude module: 'spring-boot-starter-logging'
    }

    // Spring boot devtools
//    implementation  group: 'org.springframework.boot', name: 'spring-boot-devtools'

    // XML 메세지 컨버터 추가
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.11.1'
}

test {
    useJUnitPlatform()
}
